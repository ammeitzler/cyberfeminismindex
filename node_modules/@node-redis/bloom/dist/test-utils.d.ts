import TestUtils from '@node-redis/test-utils';
declare const _default: TestUtils;
export default _default;
export declare const GLOBAL: {
    SERVERS: {
        OPEN: {
            serverArguments: string[];
            clientOptions: {
                modules: {
                    bf: {
                        ADD: typeof import("./commands/bloom/ADD");
                        add: typeof import("./commands/bloom/ADD");
                        EXISTS: typeof import("./commands/bloom/EXISTS");
                        exists: typeof import("./commands/bloom/EXISTS");
                        INFO: typeof import("./commands/bloom/INFO");
                        info: typeof import("./commands/bloom/INFO");
                        INSERT: typeof import("./commands/bloom/INSERT");
                        insert: typeof import("./commands/bloom/INSERT");
                        LOADCHUNK: typeof import("./commands/bloom/LOADCHUNK");
                        loadChunk: typeof import("./commands/bloom/LOADCHUNK");
                        MADD: typeof import("./commands/bloom/MADD");
                        mAdd: typeof import("./commands/bloom/MADD");
                        MEXISTS: typeof import("./commands/bloom/MEXISTS");
                        mExists: typeof import("./commands/bloom/MEXISTS");
                        RESERVE: typeof import("./commands/bloom/RESERVE");
                        reserve: typeof import("./commands/bloom/RESERVE");
                        SCANDUMP: typeof import("./commands/bloom/SCANDUMP");
                        scanDump: typeof import("./commands/bloom/SCANDUMP");
                    };
                    cms: {
                        INCRBY: typeof import("./commands/count-min-sketch/INCRBY");
                        incrBy: typeof import("./commands/count-min-sketch/INCRBY");
                        INFO: typeof import("./commands/count-min-sketch/INFO");
                        info: typeof import("./commands/count-min-sketch/INFO");
                        INITBYDIM: typeof import("./commands/count-min-sketch/INITBYDIM");
                        initByDim: typeof import("./commands/count-min-sketch/INITBYDIM");
                        INITBYPROB: typeof import("./commands/count-min-sketch/INITBYPROB");
                        initByProb: typeof import("./commands/count-min-sketch/INITBYPROB");
                        MERGE: typeof import("./commands/count-min-sketch/MERGE");
                        merge: typeof import("./commands/count-min-sketch/MERGE");
                        QUERY: typeof import("./commands/count-min-sketch/QUERY");
                        query: typeof import("./commands/count-min-sketch/QUERY");
                    };
                    cf: {
                        ADD: typeof import("./commands/cuckoo/ADD");
                        add: typeof import("./commands/cuckoo/ADD");
                        ADDNX: typeof import("./commands/cuckoo/ADDNX");
                        addNX: typeof import("./commands/cuckoo/ADDNX");
                        COUNT: typeof import("./commands/cuckoo/COUNT");
                        count: typeof import("./commands/cuckoo/COUNT");
                        DEL: typeof import("./commands/cuckoo/DEL");
                        del: typeof import("./commands/cuckoo/DEL");
                        EXISTS: typeof import("./commands/cuckoo/EXISTS");
                        exists: typeof import("./commands/cuckoo/EXISTS");
                        INFO: typeof import("./commands/cuckoo/INFO");
                        info: typeof import("./commands/cuckoo/INFO");
                        INSERT: typeof import("./commands/cuckoo/INSERT");
                        insert: typeof import("./commands/cuckoo/INSERT");
                        INSERTNX: typeof import("./commands/cuckoo/INSERTNX");
                        insertNX: typeof import("./commands/cuckoo/INSERTNX");
                        LOADCHUNK: typeof import("./commands/cuckoo/LOADCHUNK");
                        loadChunk: typeof import("./commands/cuckoo/LOADCHUNK");
                        RESERVE: typeof import("./commands/cuckoo/RESERVE");
                        reserve: typeof import("./commands/cuckoo/RESERVE");
                        SCANDUMP: typeof import("./commands/cuckoo/SCANDUMP");
                        scanDump: typeof import("./commands/cuckoo/SCANDUMP");
                    };
                    topK: {
                        ADD: typeof import("./commands/top-k/ADD");
                        add: typeof import("./commands/top-k/ADD");
                        COUNT: typeof import("./commands/top-k/COUNT");
                        count: typeof import("./commands/top-k/COUNT");
                        INCRBY: typeof import("./commands/top-k/INCRBY");
                        incrBy: typeof import("./commands/top-k/INCRBY");
                        INFO: typeof import("./commands/top-k/INFO");
                        info: typeof import("./commands/top-k/INFO");
                        LIST: typeof import("./commands/top-k/LIST");
                        list: typeof import("./commands/top-k/LIST");
                        QUERY: typeof import("./commands/top-k/QUERY");
                        query: typeof import("./commands/top-k/QUERY");
                        RESERVE: typeof import("./commands/top-k/RESERVE");
                        reserve: typeof import("./commands/top-k/RESERVE");
                    };
                };
            };
        };
    };
};
