"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const assert_1 = require("assert");
const test_utils_1 = require("../../test-utils");
const INSERT_1 = require("./INSERT");
describe('BF INSERT', () => {
    describe('transformArguments', () => {
        it('simple', () => {
            assert_1.strict.deepEqual((0, INSERT_1.transformArguments)('key', 'item'), ['BF.INSERT', 'key', 'ITEMS', 'item']);
        });
        it('with CAPACITY', () => {
            assert_1.strict.deepEqual((0, INSERT_1.transformArguments)('key', 'item', { CAPACITY: 100 }), ['BF.INSERT', 'key', 'CAPACITY', '100', 'ITEMS', 'item']);
        });
        it('with ERROR', () => {
            assert_1.strict.deepEqual((0, INSERT_1.transformArguments)('key', 'item', { ERROR: 0.01 }), ['BF.INSERT', 'key', 'ERROR', '0.01', 'ITEMS', 'item']);
        });
        it('with EXPANSION', () => {
            assert_1.strict.deepEqual((0, INSERT_1.transformArguments)('key', 'item', { EXPANSION: 1 }), ['BF.INSERT', 'key', 'EXPANSION', '1', 'ITEMS', 'item']);
        });
        it('with NOCREATE', () => {
            assert_1.strict.deepEqual((0, INSERT_1.transformArguments)('key', 'item', { NOCREATE: true }), ['BF.INSERT', 'key', 'NOCREATE', 'ITEMS', 'item']);
        });
        it('with NONSCALING', () => {
            assert_1.strict.deepEqual((0, INSERT_1.transformArguments)('key', 'item', { NONSCALING: true }), ['BF.INSERT', 'key', 'NONSCALING', 'ITEMS', 'item']);
        });
        it('with CAPACITY, ERROR, EXPANSION, NOCREATE and NONSCALING', () => {
            assert_1.strict.deepEqual((0, INSERT_1.transformArguments)('key', 'item', {
                CAPACITY: 100,
                ERROR: 0.01,
                EXPANSION: 1,
                NOCREATE: true,
                NONSCALING: true
            }), ['BF.INSERT', 'key', 'CAPACITY', '100', 'ERROR', '0.01', 'EXPANSION', '1', 'NOCREATE', 'NONSCALING', 'ITEMS', 'item']);
        });
    });
    test_utils_1.default.testWithClient('client.bf.insert', async (client) => {
        assert_1.strict.deepEqual(await client.bf.insert('key', 'item'), [true]);
    }, test_utils_1.GLOBAL.SERVERS.OPEN);
});
